<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	  <annotation-driven conversion-service="applicationConversionService">
    	<argument-resolvers>
      	<beans:bean class="org.springframework.data.web.PageableArgumentResolver" />
   	 </argument-resolvers>
 	</annotation-driven>
 	
	   <!-- Customer Converters/Formatters -->
  <beans:bean id="applicationConversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
    <beans:property name="formatters">
      <beans:set>
     <!--    <bean class="com.eprize.msp.data.formatters.PhoneFormatAnnotationFormatterFactory" />
        <bean class="com.eprize.msp.data.formatters.IntegerFormatAnnotationFormatterFactory" />
        <bean class="com.eprize.msp.data.formatters.CurrencyFormatAnnotationFormatterFactory" /> --> 
      </beans:set>
    </beans:property>
  </beans:bean>
	
	  <!-- URL mappings for static resources -->
	  <resources location="/css/" mapping="/css/**" />
 	 <resources location="/images/" mapping="/images/**" />
	  <resources location="/js/" mapping="/js/**" />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	 <beans:bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
    <beans:property name="order" value="1" />
    <beans:property name="contentNegotiationManager">
      <beans:bean class="org.springframework.web.accept.ContentNegotiationManager">
        <beans:constructor-arg>
          <beans:bean class="org.springframework.web.accept.PathExtensionContentNegotiationStrategy">
            <beans:constructor-arg>
              <beans:map>
                <beans:entry key="json" value="application/json" />
                <beans:entry key="xml" value="application/xml" />
              </beans:map>
            </beans:constructor-arg>
          </beans:bean>
        </beans:constructor-arg>
      </beans:bean>
    </beans:property>

    <beans:property name="defaultViews">
      <beans:list>
        <beans:bean class="org.springframework.web.servlet.view.json.MappingJacksonJsonView" />
        <beans:bean class="org.springframework.web.servlet.view.xml.MarshallingView">
          <beans:constructor-arg>
            <beans:bean class="org.springframework.oxm.xstream.XStreamMarshaller">
              <beans:property name="autodetectAnnotations" value="true" />
            </beans:bean>
          </beans:constructor-arg>
        </beans:bean>
      </beans:list>
    </beans:property>
  </beans:bean>


  <!-- Templates configuration -->
  <beans:bean id="templateResolver" class="org.thymeleaf.templateresolver.ServletContextTemplateResolver">
    <beans:property name="prefix" value="/WEB-INF/templates/" />
    <beans:property name="suffix" value=".html" />
    <!-- <property name="templateMode" value="HTML5" /> -->
    <!-- <property name="cacheable" value="false" /> -->
  </beans:bean>

  <beans:bean id="templateEngine" class="org.thymeleaf.spring3.SpringTemplateEngine">
     <beans:property name="templateResolver" ref="templateResolver" />
    <beans:property name="additionalDialects">
      <beans:set>
        <beans:bean class="org.thymeleaf.extras.tiles2.dialect.TilesDialect" />
        <beans:bean class="org.thymeleaf.extras.springsecurity3.dialect.SpringSecurityDialect" />
      </beans:set>
    </beans:property>
  </beans:bean>

  <!-- Configures the Tiles layout system using a specific thymeleaf-enabled Tiles Configurer -->
  <beans:bean id="tilesConfigurer" class="org.thymeleaf.extras.tiles2.spring.web.configurer.ThymeleafTilesConfigurer">
    <beans:property name="definitions">
      <beans:list>
        <beans:value>/WEB-INF/**/views.xml</beans:value>
      </beans:list>
    </beans:property>
  </beans:bean>

  <beans:bean id="tilesViewResolver" class="org.thymeleaf.spring3.view.AjaxThymeleafViewResolver">
    <beans:property name="templateEngine" ref="templateEngine" />
    <beans:property name="viewClass" value="org.thymeleaf.extras.tiles2.spring.web.view.FlowAjaxThymeleafTilesView" />
    <!-- <property name="order" value="1" /> -->
    <!-- <property name="viewNames" value="*.html,*.xhtml" /> -->
  </beans:bean>

  <!-- end template configuration -->
	
	<context:component-scan base-package="net.fourstrategery.cloud" />
	
	
	
</beans:beans>
